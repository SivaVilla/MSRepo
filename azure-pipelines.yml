# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-2019
stages:
- stage: Build
  jobs:
  - job: BuildJob1
    steps:

    - task: CopyFiles@2
      displayName: 'Copy Files to:  $(build.artifactstagingdirectory)/Templates'
      inputs:
        SourceFolder: deployment
        Contents: '*.json'
        TargetFolder: ' $(build.artifactstagingdirectory)/Templates'

    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'install --production'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/ContosoAir-$(Build.BuildId).zip'
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Dev
  jobs:
  - job: DevJobDeploy
    steps: 
    - checkout: none 

    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'visivapr@microsoft.com (a6aa6a37-1766-49ed-b4c6-8ada39c74f6d)'
        appType: 'webAppLinux'
        WebAppName: 'linuxwebappee'
        packageForLinux: '$(System.ArtifactsDirectory)/**/*.war'